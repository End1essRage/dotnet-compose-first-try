version: '3.4'

networks:
  retail-dev:
    driver: bridge

services:

  catalogservice:
    image: ${DOCKER_REGISTRY-}catalogservice
    depends_on:
      - "postgres"
    build:
      context: .
      dockerfile: CatalogService/Dockerfile
    ports:
        - "8080:80"
    environment:
      - PostgresqlConnectionString=User ID=postgres;Password=postgres;Server=postgres;Port=5432;Database=SampleCategory;
    networks:
      - retail-dev


  cartservice:
     image: ${DOCKER_REGISTRY-}cartservice
     depends_on:
      - "mongo"
     build:
       context: .
       dockerfile: CartService/Dockerfile
     ports:
         - "8081:80"
     environment:
       - MongoDbConnectionString=mongodb://mongo:27017/
     networks:
       - retail-dev


  orderservice:
    image: ${DOCKER_REGISTRY-}orderservice
    depends_on:
      - "mongo"
    build:
      context: .
      dockerfile: OrderService/Dockerfile
    ports:
        - "8082:80"
    environment:
      - MongoDbConnectionString=mongodb://mongo:27017/
    networks:
      - retail-dev

  mongo:
    image: mongo
    restart: always
    ports:
      - 27017:27017
    volumes:
      - db_volume:/var/lib/mongodb/data
    networks:
      - retail-dev


  postgres:
    image: postgres:latest
    ports:
        - "5433:5432"
    restart: always
    volumes:
      - db_volume:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=SampleCategory
    networks:
      - retail-dev


volumes:
  db_volume:

